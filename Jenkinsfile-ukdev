#!/usr/bin/env groovy

@Library(["pipelineuk@2.8.5", "pipelineuk-sec@5.0.1"]) _

final DEPLOYMENT_NAME = "rust-api"
final PROJECT_NAME = "minibank"
final FILES = "Dockerfile,target,Cargo.toml"
final TAG = "latest"
final GIT_URL = "https://uk-gitlab.almuk.santanderuk.corp/C0209367/api-rust.git"

final REGISTRY_INTERNAL = "https://registry-ukdev01a.paas.santanderuk.dev.corp/"
final IMAGE_INTERNAL = "registry-ukdev01a.paas.santanderuk.dev.corp/minibank/apis/rust-api"
final CREDENTIAL = "S0501473_USRPWD"
final IMAGE_NAME = 'apis/rust-api'

pipeline {
  agent { label 'rust-jnlp-slave' }

  options {
    skipDefaultCheckout()
    disableConcurrentBuilds()
  }

  stages {
    stage('Checkout Source Code') {
      steps {
        script { gitinfo = checkout scm }
      }
    }
    stage('Cargo Build') {
      steps {
        sh 'cargo build --release'
        stash name: "files"
      }
    }
    stage('Build & Push Docker Image') {
      agent { label 'docker' }
      steps {
        unstash "files"
        sh "docker build --label \"git_url=${gitinfo.GIT_URL}\" " +
          "--label \"git_branch=${gitinfo.GIT_BRANCH}\" " +
          "--label \"git_commit=${gitinfo.GIT_COMMIT}\" " +
          "-t ${IMAGE_INTERNAL}:${TAG} ."
        withDockerRegistry([credentialsId: CREDENTIAL, url: REGISTRY_INTERNAL]) {
          sh "docker push ${IMAGE_INTERNAL}:${TAG}"
        }
      }
    }
    stage('Deploy to DEV'){
      steps {
        sh 'oc rollout latest ' + DEPLOYMENT_NAME
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
